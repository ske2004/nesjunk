;
; Fixed point numbers, 16.3
;
; WWWWWWWW WWWWFFFS
;
; S = Sign bit
; W = Whole part
; F = Fractional part
;

LIBFX163_PAR2_ADDR = $00

_hex_lut:
    .BYTE '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'

.MACRO LIBFX163_SET addr, sign, whole, frac
    LDA #(whole>>4)
    STA addr+1
    LDA #((((frac>>1)&$7)<<1)|((whole&$0F)<<4)|(sign&1))
    STA addr
.ENDMACRO

; LIBFX163_PAR2_ADDR = address of the number
.PROC libfx163_draw
    LIBGFX_PUSH8 $06
    LDY #$00
    LDA (LIBFX163_PAR2_ADDR), Y
    AND #$01
    BNE @neg
@pos:
    LIBGFX_PUSH8 '+'
    JMP @end
@neg:
    LIBGFX_PUSH8 '-'
@end:
    LDY #$01
    LDA (LIBFX163_PAR2_ADDR), Y
    LSR
    LSR
    LSR
    LSR
    TAX
    LDA _hex_lut, X
    LIBGFX_PUSH_A
    LDY #$01
    LDA (LIBFX163_PAR2_ADDR), Y
    AND #$0F
    TAX
    LDA _hex_lut, X
    LIBGFX_PUSH_A
    LDY #$00
    LDA (LIBFX163_PAR2_ADDR), Y
    LSR
    LSR
    LSR
    LSR
    TAX
    LDA _hex_lut, X
    LIBGFX_PUSH_A
    LIBGFX_PUSH8 '.'
    LDY #$00
    LDA (LIBFX163_PAR2_ADDR), Y
    AND #$0E
    TAX
    LDA _hex_lut, X
    LIBGFX_PUSH_A
    RTS
.ENDPROC
